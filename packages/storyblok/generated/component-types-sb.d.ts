// This file was generated by the storyblok CLI.
// DO NOT MODIFY THIS FILE BY HAND.
import type { ISbStoryData } from "storyblok";
export interface RichtextStoryblok {
  type: string;
  content?: RichtextStoryblok[];
  marks?: RichtextStoryblok[];
  attrs?: any;
  text?: string;
  [k: string]: any;
}

export interface ArticleStoryblok {
  title: string;
  body?: RichtextStoryblok;
  footer?: any[];
  component: "article";
  _uid: string;
  [k: string]: any;
}

export interface FaqStoryblok {
  question: string;
  answer: RichtextStoryblok;
  component: "faq";
  _uid: string;
  [k: string]: any;
}

export interface FaqsStoryblok {
  internalName: string;
  title: string;
  intro?: RichtextStoryblok;
  faqItems?: (ISbStoryData<FaqStoryblok> | string)[];
  backgroundColor?: number | string;
  component: "faqs";
  _uid: string;
  [k: string]: any;
}

export interface FeatureStoryblok {
  name?: string;
  component: "feature";
  _uid: string;
  [k: string]: any;
}

export interface GridStoryblok {
  columns?: (
    | ArticleStoryblok
    | FaqStoryblok
    | FaqsStoryblok
    | FeatureStoryblok
    | GridStoryblok
    | HeroStoryblok
    | MediaStoryblok
    | NavigationLinkStoryblok
    | PageStoryblok
    | RichTextStoryblok
    | SettingsStoryblok
    | SplitLogosStoryblok
    | TeaserStoryblok
    | VideoStoryblok
  )[];
  component: "grid";
  _uid: string;
  [k: string]: any;
}

export interface AssetStoryblok {
  alt?: string;
  copyright?: string;
  id: number;
  filename: string;
  name: string;
  title?: string;
  focus?: string;
  [k: string]: any;
}

export type MultilinkStoryblok =
  | {
      id?: string;
      cached_url?: string;
      anchor?: string;
      linktype?: "story";
      target?: "_self" | "_blank";
      story?: {
        name: string;
        created_at?: string;
        published_at?: string;
        id: number;
        uuid: string;
        content?: {
          [k: string]: any;
        };
        slug: string;
        full_slug: string;
        sort_by_date?: null | string;
        position?: number;
        tag_list?: string[];
        is_startpage?: boolean;
        parent_id?: null | number;
        meta_data?: null | {
          [k: string]: any;
        };
        group_id?: string;
        first_published_at?: string;
        release_id?: null | number;
        lang?: string;
        path?: null | string;
        alternates?: any[];
        default_full_slug?: null | string;
        translated_slugs?: null | any[];
        [k: string]: any;
      };
      [k: string]: any;
    }
  | {
      url?: string;
      cached_url?: string;
      anchor?: string;
      linktype?: "asset" | "url";
      target?: "_self" | "_blank";
      [k: string]: any;
    }
  | {
      email?: string;
      linktype?: "email";
      target?: "_self" | "_blank";
      [k: string]: any;
    };

export interface HeroStoryblok {
  internalName: string;
  variant?: "" | "primary" | "secondary" | "background-image" | "full-page";
  heading: string;
  eyebrow?: string;
  text?: RichtextStoryblok;
  image?: AssetStoryblok;
  videoUrl?: string;
  cta1?: Exclude<MultilinkStoryblok, {linktype?: "asset"}>;
  cta2?: Exclude<MultilinkStoryblok, {linktype?: "asset"}>;
  height?: number | string;
  component: "hero";
  _uid: string;
  [k: string]: any;
}

export interface MediaStoryblok {
  internalName: string;
  title?: string;
  text?: RichtextStoryblok;
  image?: AssetStoryblok;
  video?: Exclude<MultilinkStoryblok, {linktype?: "email"} | {linktype?: "asset"}>;
  caption?: string;
  width?: number | string;
  height?: number | string;
  backgroundColor?: number | string;
  component: "media";
  _uid: string;
  [k: string]: any;
}

export interface NavigationLinkStoryblok {
  label: string;
  link: Exclude<MultilinkStoryblok, {linktype?: "asset"}>;
  icon?: number | string;
  component: "navigationLink";
  _uid: string;
  [k: string]: any;
}

export interface PageStoryblok {
  noIndex?: boolean;
  title: string;
  body?: (
    | ArticleStoryblok
    | FaqStoryblok
    | FaqsStoryblok
    | FeatureStoryblok
    | GridStoryblok
    | HeroStoryblok
    | MediaStoryblok
    | NavigationLinkStoryblok
    | PageStoryblok
    | RichTextStoryblok
    | SettingsStoryblok
    | SplitLogosStoryblok
    | TeaserStoryblok
    | VideoStoryblok
  )[];
  component: "page";
  _uid: string;
  [k: string]: any;
}

export interface RichTextStoryblok {
  internalName: string;
  text: RichtextStoryblok;
  component: "richText";
  _uid: string;
  [k: string]: any;
}

export interface SettingsStoryblok {
  siteName?: string;
  siteLogo: AssetStoryblok;
  header?: any;
  banner?: RichtextStoryblok;
  headerLinks?: (ISbStoryData<NavigationLinkStoryblok> | string)[];
  footer?: any;
  footerMessage?: string;
  footerCopyright?: string;
  footerLinks?: (ISbStoryData<NavigationLinkStoryblok> | string)[];
  footerSocialLinks?: (ISbStoryData<NavigationLinkStoryblok> | string)[];
  notFoundTitle?: string;
  notFoundEyebrow?: string;
  notFoundText?: RichtextStoryblok;
  cta1?: Exclude<MultilinkStoryblok, {linktype?: "email"} | {linktype?: "asset"}>;
  cta2?: Exclude<MultilinkStoryblok, {linktype?: "email"} | {linktype?: "asset"}>;
  component: "settings";
  _uid: string;
  [k: string]: any;
}

export type MultiassetStoryblok = {
  alt?: string;
  copyright?: string;
  id: number;
  filename: string;
  name: string;
  title?: string;
  [k: string]: any;
}[];

export interface SplitLogosStoryblok {
  internalName: string;
  title?: string;
  text?: RichtextStoryblok;
  logos?: MultiassetStoryblok;
  component: "splitLogos";
  _uid: string;
  [k: string]: any;
}

export interface TeaserStoryblok {
  headline?: string;
  component: "teaser";
  _uid: string;
  [k: string]: any;
}

export interface VideoStoryblok {
  internalName: string;
  source?: AssetStoryblok;
  component: "video";
  _uid: string;
  [k: string]: any;
}
